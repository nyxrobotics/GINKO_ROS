<?xml version="1.0"?>
<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <!-- add file path to GINKO -->
    <env name="GAZEBO_MODEL_PATH" value="$(find ginko_description)/../:$(optenv GAZEBO_MODEL_PATH)" /> 
    <arg name="world_name" value="$(find ginko_description)/worlds/default.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- load model with sdf for simulation,urdf for vizualization -->
  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description_sdf" textfile="$(find ginko_description)/gazebo/sdf/robot_sim_spring_close.sdf" />
  <param name="robot_description"     textfile="$(find ginko_description)/gazebo/sdf/original_sim_mimic.urdf" />

  <!-- <param name="robot_description_sdf" textfile="$(find ginko_description)/gazebo/sdf/robot_if_right_left.sdf" /> -->
  <!-- <param name="robot_description"     textfile="$(find ginko_description)/gazebo/sdf/robot_if_right_left.urdf" /> -->

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <!-- <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model rrbot -param robot_description"/> -->

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <!-- <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model base -x -2.0 -y 0.33 -z 0.4" /> -->
  <node name="spawn_sdf" pkg="gazebo_ros" type="spawn_model" output="screen" args="-sdf -param robot_description_sdf -model base -x -2.0 -y 0.33 -z 0.4" />
  <rosparam file="$(find ginko_description)/gazebo/config/gazebo_pid.yaml" command="load"/>
  <rosparam file="$(find ginko_description)/gazebo/config/joint_control.yaml" command="load"/>
  <node name="controller_spawner" 
    pkg="controller_manager" 
    type="spawner" respawn="false" output="screen" ns="/ginko"
    args="joint_state_controller"/>

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
    <remap from="/joint_states" to="/ginko/joint_states" />
    <!-- <remap from="robot_description" to="/robot_description" /> -->
  </node>

  <!-- ros_control rrbot launch file -->
  <!-- <include file="$(find ginko_description)/launch/gazebo_servo.launch" /> -->

</launch>
